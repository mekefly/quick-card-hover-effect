import { WTSC } from './WTSC';
import { WTSCOptions } from './option';
import { WTSCStorage } from './storage';
import { InjectKey } from '../inject/injectKey';
import { StyleData } from '../render/styleData';
export declare type ProvideWTSC<Options extends WTSCOptions, ParsersInterface> = WTSC<Options, ParsersInterface> & WTSCStorage;
export declare const clearList: Array<InjectKey<any>>;
/**
 * 执行add时保存调用者信息
 */
export declare let wtsc: WTSC<any, any>;
export declare let preAddKey: string;
export declare function hideAddStack(): void;
export declare function findAddStack(): void;
export declare function getStyleData(w: any): StyleData;
/**
 * 根
 */
export declare let rootWtsc: WTSC<any, any>;
export declare function defWtscPrototype<Options extends WTSCOptions, ParsersInterface, example extends ProvideWTSC<Options, ParsersInterface> = ProvideWTSC<Options, ParsersInterface>>(option: Options): WTSC<Options, ParsersInterface>;
//# sourceMappingURL=WTSCPrototype.d.ts.map