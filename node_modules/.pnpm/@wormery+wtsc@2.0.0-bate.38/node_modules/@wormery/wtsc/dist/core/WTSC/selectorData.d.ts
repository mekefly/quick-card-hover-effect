import { Data } from '../inject/types';
import { StyleData } from '../render/styleData';
import { CSSStyle } from './types';
export interface SelectorData {
    name: string;
    selector: string;
    pseudoClass?: Data<string, string>;
    style: string;
}
export declare const selectorDataInj: import("../inject/injectKey").InjectKey<SelectorData, false>;
export declare function addClassSelectorData(w: any, className: string, global?: boolean): void;
/**
 * 创建 SelectorData
 * @author meke
 * @export
 * @param {StyleData} styleData
 * @param {string} className
 * @param {*} style
 * @return {*}  {SelectorData}
 */
export declare function createClassSelectorData(styleData: StyleData, className: string, style: CSSStyle, isGlobal?: boolean): SelectorData;
/**
 * 为selectorData添加PseudoClass
 * @author meke
 * @export
 * @param {SelectorData} selectorData
 * @param {string} pseudo
 * @param {*} style
 */
export declare function selectorDataPushPseudoClass(selectorData: SelectorData, pseudo: string, style: any): void;
export declare function pseudoClassPush(pseudoClass: Data<string, string>, pseudo: string, style: any): void;
//# sourceMappingURL=selectorData.d.ts.map