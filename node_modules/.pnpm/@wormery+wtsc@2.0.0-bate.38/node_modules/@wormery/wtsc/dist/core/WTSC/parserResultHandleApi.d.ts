import { WTSCOptions } from './option';
import { WTSC } from './WTSC';
import { StyleValue, AddRest } from './types';
/**
 * @author meke
 * @private
 * @template F
 * @param {string} key
 * @param {F} handle
 * @param {...any[]} rest
 * @return {*}  {WTSC<T>}
 * @memberof WTSC
 */
export declare function parsersResultHandle(...rest: StyleValue): WTSC<any, any>;
export declare function Add(key: string, ...rest: StyleValue): WTSC<any, any>;
export declare function styleValueToString<O extends WTSCOptions, ParsersInterface>(wtsc: WTSC<O, ParsersInterface>, styleValue: StyleValue): string;
export declare function isAddRestList(v: StyleValue): v is AddRest[];
//# sourceMappingURL=parserResultHandleApi.d.ts.map