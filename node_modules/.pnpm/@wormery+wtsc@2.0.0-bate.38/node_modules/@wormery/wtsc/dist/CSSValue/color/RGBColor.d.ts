import { Percentage } from '../Percentage';
import { RGBAColor } from './RGBAColor';
import { Color } from '.';
import { Alpha } from './Color';
import { OutValue } from '../../../dist/CSSValue/index';
import { Clone } from '../../utils/interface';
export interface RGBColorNumbers {
    r: number;
    g: number;
    b: number;
    a: number;
}
export interface RGBColor extends Color, Alpha, RGBColorPrototype {
    r: number | Percentage;
    g: number | Percentage;
    b: number | Percentage;
}
export interface RGBColorPrototype extends OutValue, Clone<RGBColor> {
    toNumbers(): RGBColorNumbers;
    setR(value: number | Percentage): RGBColor;
    setG(value: number | Percentage): RGBColor;
    setB(value: number | Percentage): RGBColor;
    setA(value: number | Percentage): RGBColor;
}
/**
 * 生成rgba
 * @author meke
 * @export
 * @param {(number | Percentage)} r
 * @param {(number | Percentage)} g
 * @param {(number | Percentage)} b
 * @param {number} a
 * @return {*}  {RGBAColor}
 */
export declare function rgb(r: number | Percentage, g: number | Percentage, b: number | Percentage, a: number | Percentage): RGBAColor;
/**
 * 生成rgb
 * @author meke
 * @export
 * @param {(number | Percentage)} r
 * @param {(number | Percentage)} g
 * @param {(number | Percentage)} b
 * @return {*}  {RGBColor}
 */
export declare function rgb(r: number | Percentage, g: number | Percentage, b: number | Percentage): RGBColor;
export declare function rgbStrToRGB(c: string): RGBAColor;
export declare function toRGB(c: string | number): RGBAColor;
/**
 * 混合颜色
 * @author meke
 * @export
 * @param {(RGBColor | RGBAColor)} color
 * @param {(...Array<RGBAColor | RGBColor>)} rest
 * @return {*}  {RGBColor}
 */
export declare function mixColor(color: RGBColor | RGBAColor, ...rest: Array<RGBAColor | RGBColor>): RGBColor;
/**
 * 输入一个颜色调节它的饱和度
 * @author meke
 * @export
 * @param {(RGBColor | RGBAColor)} color
 * @param {number} saturation 饱和度 0 - infinite ,输入0输出灰色，越大色彩越饱和
 * @return {*}  {RGBColor}
 */
export declare function saturation(color: RGBColor | RGBAColor, saturation: number): RGBColor;
//# sourceMappingURL=RGBColor.d.ts.map